name: cd frontend

on:
  workflow_call:
    secrets:
        ARM_CLIENT_ID:
          required: true
        ARM_CLIENT_SECRET:
          required: true
        ARM_TENANT_ID:
          required: true
        HARBOR_PASSWORD:
          required: true

    inputs:
      imagen_docker_completa:
        required: true
        type: string
    
jobs:
  cd:
    runs-on: ubuntu-latest
    steps:
      - name: Update packages
        run: sudo apt update

      - name: Instalamos az cli
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Login con Service Principal
        run: az login --service-principal --username ${{ secrets.ARM_CLIENT_ID }} --password ${{ secrets.ARM_CLIENT_SECRET}} --tenant ${{ secrets.ARM_TENANT_ID}}
      
      - name: Asociamos kubectl al Cluster AKS (kubeconfig)
        run: az aks get-credentials --resource-group rg-jjfernandez-dvfinlab --name aks-cluster 
      
      - name: Instalar Helm
        run: | 
          sudo curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
      
      - name: Crear namespace si no esta creado anteriormente
        run: |
          if ! kubectl get ns rrhh > /dev/null 2>&1; then
            kubectl create ns rrhh
          fi

      - name: Crear Secret para credenciales Azure Container Registry
        run: |
            if ! kubectl get secrets acr-secret -n rrhh > /dev/null 2>&1; then
              kubectl create secret docker-registry acr-secret \
                --namespace rrhh \
                --docker-server=${{ vars.DOCKER_USERNAME }} \
                --docker-username=${{ secrets.ARM_CLIENT_ID }} \
                --docker-password=${{ secrets.ARM_CLIENT_SECRET}}
            fi
      # - name: Crear Secreto para credenciales Azure Container Registry
      #   run: |
      #     kubectl create ns rrhh
      #     kubectl create secret docker-registry acr-secret \
      #       --namespace rrhh \
      #       --docker-server=${{ vars.DOCKER_USERNAME }} \
      #       --docker-username=${{ secrets.ARM_CLIENT_ID }} \
      #       --docker-password=${{ secrets.ARM_CLIENT_SECRET}}

      - name: Logearse en harbor
        run:  helm registry login harbor.codeops.es -u jfernandez -p ${{ secrets.HARBOR_PASSWORD }}

      - name: Actualizar chart con Helm
        run: |
          helm upgrade --install app-k8s oci://harbor.codeops.es/jfernandez/final-project-chart-joel \
            --set frontend.image=${{inputs.imagen_docker_completa}}
      
      - name: Mostrar lista helm
        run: |
          helm list
          helm history app-k8s